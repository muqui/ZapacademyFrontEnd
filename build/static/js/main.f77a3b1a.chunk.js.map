{"version":3,"sources":["components/Login.js","components/menu.js","components/Admin.js","components/Logout.js","components/event.js","components/DynamicSelect.js","components/listEvents.js","components/misEventos.js","App.js","serviceWorker.js","index.js"],"names":["axios","require","Login","props","state","email","password","loggedIn","onChange","bind","handleOnAddUser","e","this","setState","target","name","value","event","currentComponent","preventDefault","post","headers","then","response","token","data","id","user","localStorage","setItem","console","log","to","onSubmit","type","placeholder","Component","Menu","className","Admin","getItem","Logout","removeItem","Event","defaults","common","disabled","nombre","fecha_inicio","fecha_fin","refs","btn","setAttribute","removeAttribute","ref","DynamicSelect","handleChange","selectedValue","onSelectChange","options","arrayOfData","map","key","Events","events","scope","CURP","apellido_paterno","apellido_materno","status","href","imagen","App","handleSelectChange","a","listaEventos","selectListEvent","url","get","res","exact","path","component","MisEventos","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f77a3b1a.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {Redirect} from 'react-router-dom'\nconst axios = require('axios')\n\nexport default class Login extends Component{\n    constructor(props) {\n      super(props)\n        let loggedIn = false;\n        this.state={\n          email:'',\n          password:'', \n          loggedIn\n          }\n          this.onChange = this.onChange.bind(this)\n          this.handleOnAddUser = this.handleOnAddUser.bind(this)\n          \n      }\n      onChange(e){\n        this.setState({\n          [e.target.name]: e.target.value\n        })\n      }\n      handleOnAddUser (event) {\n        let currentComponent = this;\n        const {email, password} = this.state\n        //console.log(\"Email \" + email);\n        //console.log(\"password\" +  password);\n        event.preventDefault();\n       \n        \n        axios.post('https://zapacademy.herokuapp.com/login', {\n          headers: {\n            'Access-Control-Allow-Origin': '*',\n          },\n         \n          password,\n          email\n        })\n        .then(function (response) {\n          \n          const token  = response.data.token\n         \n          \n\n          if (typeof token !== \"undefined\") {\n            const id = response.data.user.id\n          //  console.log(token.length);\n            localStorage.setItem(\"token\", token)\n            localStorage.setItem(\"id\", id)\n            console.log(\"ID = \" + id);\n            currentComponent.setState({\n                \n                loggedIn: true\n            })\n           \n        }\n        else{\n        }\n          \n         \n        })\n        \n    \n      }\n  render(){\n    if(this.state.loggedIn){\n      return <Redirect to =\"/admin\" />\n    }\n    return ( \n      <div>\n        <h1>Formulario</h1>\n<form onSubmit={this.handleOnAddUser}>\n         <input type=\"email\" placeholder=\"email\" name=\"email\" value={this.state.email} onChange={this.onChange}   />\n          <input type=\"text\" placeholder=\"password\" name=\"password\"  value={this.state.password} onChange={this.onChange}  />\n         \n          <input type=\"submit\" value=\"Entrar\" />\n      </form>\n      </div>\n      \n    );\n  }\n  \n}\n\n","// Menu.js\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport React, { Component } from 'react';\n\nclass Menu extends Component {\n  render() {\n    return (\n        \n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <ul className=\"navbar-nav mr-auto\">\n         \n            <li><Link to={'/event'} className=\"nav-link\">Crear evento</Link></li>\n            <li><Link to={'/events'} className=\"nav-link\">Eventos</Link></li>\n            <li><Link to={'/logout'} className=\"nav-link\">Salir</Link></li>\n\n            \n           \n          </ul>\n          </nav>\n       \n    );\n  }\n}\n\nexport default Menu;","// Contact.js\n\nimport React, { Component } from 'react';\nimport {Link, Redirect} from 'react-router-dom'\nimport Menu from '../components/menu';\nclass Admin extends Component {\n    constructor(props) {\n        super(props)\n         const token = localStorage.getItem(\"token\")\n         let loggedIn = true\n         if(token == null){\n            loggedIn = false\n         }\n\n         this.state={\n            loggedIn\n            }\n        }\n\n  render() {\n    console.log(\"token\" +  localStorage.getItem(\"token\"));\n     if(this.state.loggedIn === false){\n         return < Redirect to =\"/\"/>\n     }\n\n    return (\n        <div>\n          <Menu />\n          <h2>This is a Admin Page. Only Auth people   can see this.</h2>\n           <Link to =\"/logout\">Logout</Link>\n        </div>\n    );\n  }\n}\n\nexport default Admin;","\nimport React, { Component } from 'react';\nimport {Link} from 'react-router-dom'\n\nclass Logout extends Component {\n  constructor(props) {\n    super(props)\n    localStorage.removeItem(\"token\")\n    }\n  render() {\n    return (\n        <div>\n          <h2>You have been logged out </h2>\n          \n        </div>\n    );\n  }\n}\n\nexport default Logout;","// Event.js\nimport React, { Component } from 'react'\nimport {Redirect} from 'react-router-dom'\nimport Menu from '../components/menu';\nconst axios = require('axios')\n//import Menu from './components/menu';\n\nexport default class Event extends Component{\n    constructor(props) {\n      super(props)\n        axios.defaults.headers.common = {'Authorization': `bearer ${localStorage.getItem(\"token\")}`}\n        const token = localStorage.getItem(\"token\")\n        let loggedIn = true\n        \n        if(token == null){\n          loggedIn = false\n       }\n        this.state={\n          disabled : false,\n            nombre:'',  \n            fecha_inicio:'',\n            fecha_fin:'', \n          loggedIn\n          }\n          this.onChange = this.onChange.bind(this)\n          this.handleOnAddUser = this.handleOnAddUser.bind(this)\n          \n      }\n\n\n      onChange(e){\n        this.setState({\n          [e.target.name]: e.target.value\n        })\n      }\n      handleOnAddUser (event) {\n        event.preventDefault();\n        this.refs.btn.setAttribute(\"disabled\", \"disabled\");\n        let currentComponent = this;\n        this.value = true;\n        const {nombre, fecha_inicio, fecha_fin} = this.state\n        const id = localStorage.getItem(\"id\")\n        console.log(\"ID  \" + id);\n        //console.log(\"fechaInicio\" +  fechaInicio);\n        //console.log(\"fechaFin\" +  fechaFin);\n        console.log(\"token\" +  localStorage.getItem(\"token\"));\n      \n       \n        \n        axios.post('https://zapacademy.herokuapp.com/evento', {\n          headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Authorization': `bearer ${localStorage.getItem(\"token\")}`\n          },\n         \n          nombre,\n          fecha_inicio,\n          fecha_fin,\n          id\n\n        })\n        .then(function (response) {\n          \n          \n          \n          currentComponent.setState({disabled: false});\n      \n          console.log(response);\n          \n          currentComponent.refs.btn.removeAttribute(\"disabled\");\n        })\n        \n    \n      }\n  render(){\n    console.log(\"token en event ===\"  +  localStorage.getItem(\"token\"));\n     if(this.state.loggedIn === false){\n         return < Redirect to =\"/\"/>\n     }\n    return ( \n        <div>\n         <Menu />\n     <h1>Crear evento</h1>\n      <form onSubmit={this.handleOnAddUser}>\n         <input type=\"text\" placeholder=\"Nombre\" name=\"nombre\" value={this.state.nombre} onChange={this.onChange}   />\n         <br></br>\n         <input type=\"date\" placeholder=\"Fecha inicio\" name=\"fecha_inicio\"  value={this.state.fecha_inicio} onChange={this.onChange}  />\n         <br></br>\n          <input type=\"date\" placeholder=\"Fecha Fin\" name=\"fecha_fin\"  value={this.state.fecha_fin} onChange={this.onChange}  />\n          <br></br>\n          <input type=\"submit\" ref=\"btn\" value=\"Crear Evento\"   /> \n      </form>\n        </div>\n   \n    );\n  }\n  \n}\n\n","import React, {Component} from 'react';\n\nclass DynamicSelect extends Component{\n    constructor(props){\n        super(props)\n    }\n\n    //On the change event for the select box pass the selected value back to the parent\n    handleChange = (event) =>\n    {\n        let selectedValue = event.target.value;\n        this.props.onSelectChange(selectedValue);\n       \n    }\n\n    render(){\n        let arrayOfData = this.props.arrayOfData;\n        let options = arrayOfData.map((data) =>\n                <option \n                    key={data.id}\n                    value={data.id}\n                >\n                    {data.nombre}\n                </option>\n            );\n        \n            return (\n            <select name=\"customSearch\" className=\"custom-search-select\" onChange={this.handleChange}>\n                <option>Select Item</option>\n                {options}\n           </select>\n        )\n    }\n}\n\nexport default DynamicSelect;","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n\nconst Events = ({events}) => {\n    return (\n        <div>\n\n\n           \n             <table className=\"table table-striped\">\n             <tr>\n    <th scope=\"col\" >CURP</th>\n    <th>Nombre</th>\n    <th>Primer Apellido</th>\n    <th>Segundo Apellido</th>\n    <th>status</th>\n    <th>Evidencia</th>\n    \n\n  </tr>      \n            {events.map((events) => (             \n             <tr >\n                 <td  scope=\"row\">{events.CURP}</td>\n                 <td >{events.nombre}</td>  \n                 <td >{events.apellido_paterno}</td>\n                 <td >{events.apellido_materno}</td>  \n                 <td >{events.status}</td>\n                 <td > <a href={`https://zapacademy.herokuapp.com/'${events.imagen}`} >Evidencia</a>  </td>      \n                 </tr>\n             ))}\n           </table>\n          </div>\n    )\n};\n\nexport default Events","import React, { Component } from 'react';\nimport DynamicSelect from './DynamicSelect';\nimport Menu from '../components/menu';\nimport Events from './listEvents'; \nconst axios = require('axios');\n\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state={\n      selectedValue: 'Nothing selected',\n      selectListEvent: [],\n      events:[]\n      \n    }\n  }\n\n  handleSelectChange = async (selectedValue ) =>{\n    \n \n\n    \n    await this.setState({\n      selectedValue: selectedValue,\n      \n    });\n    await this.listaEventos();\n    \n  }\n  listaEventos() {\n    let currentComponent = this;\n    var url = 'https://zapacademy.herokuapp.com/evento/eventos/'+ this.state.selectedValue;\n    console.log(\"Busqueda \" + this.state.selectedValue)\n    axios.get(url, {\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Authorization': `bearer ${localStorage.getItem(\"token\")}`\n      }\n    })\n      .then(res => {\n        const token  = res.data\n        currentComponent.setState({\n          selectListEvent : token      \n          \n      })\n     \n        console.log(res.data)\n        return token\n      });\n      console.log(\"GET\")\n  }\n  componentDidMount() {\n    let currentComponent = this;\n    axios.get('https://zapacademy.herokuapp.com/evento/eventos', {\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Authorization': `bearer ${localStorage.getItem(\"token\")}`\n      }\n    })\n      .then(res => {\n        const token  = res.data\n        currentComponent.setState({\n          events : token      \n          \n      })\n        \n      });\n      console.log(\"GET\")\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Menu />\n        <header className=\"App-header\">\n        \n          <h1 className=\"App-title\">Lista de eventos.</h1>\n        </header>\n        <p className=\"App-intro\">\n          <DynamicSelect arrayOfData={this.state.events} onSelectChange={this.handleSelectChange} /> <br /><br />\n          \n          <div>\n         \n           \n            \n            <Events  events={this.state.selectListEvent}/>\n          </div>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\n//import {Link, Switch, Route} from 'react-router-dom'\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n\nimport Login from './components/Login';\nimport Admin from './components/Admin';\nimport Logout from './components/Logout';\nimport Event from './components/event';\nimport MisEventos from './components/misEventos';\n\n\nclass App extends Component{\n  render(){\n    return(\n      <Router>\n      \n     \n        <Switch>\n            \n        <Route exact path='/' component={Login} />\n            <Route path='/event' component={Event} />\n            <Route path='/events' component={MisEventos} />\n           \n           \n            <Route path='/admin' component={Admin} />\n            <Route path='/logout' component={Logout} />\n\n        </Switch>\n      \n    </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}